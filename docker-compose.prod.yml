# version: '3.8'

# services:
#   # MongoDB Database
#   # mongodb:
#   #   image: mongo:7.0
#   #   container_name: video-surfing-mongodb-prod
#   #   restart: unless-stopped
#   #   environment:
#   #     MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
#   #     MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
#   #     MONGO_INITDB_DATABASE: ${MONGO_DB_NAME}
#   #   volumes:
#   #     - mongodb_data:/data/db
#   #     - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
#   #     - ./backups:/backups
#   #   networks:
#   #     - video-surfing-network
#   #   healthcheck:
#   #     test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
#   #     interval: 30shj
#   #     timeout: 10s
#   #     retries: 3
#   #     start_period: 40s
#     # Don't expose port in production (only internal access)

#   # Backend API
#   backend:
#     image: fansTube-videosurfing-backend
#     container_name: video-surfing-backend-prod
#     restart: unless-stopped
#     environment:
#       NODE_ENV: production
#       PORT: 5000
#       MONGO_URI: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/${MONGO_DB_NAME}?authSource=admin
#       JWT_SECRET: ${JWT_SECRET}
#       JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
#     depends_on:
#       mongodb:
#         condition: service_healthy
#     networks:
#       - video-surfing-network
#     # healthcheck:
#     #   test: ["CMD", "node", "-e", "require('http').get('http://localhost:5001/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
#     #   interval: 30s
#     #   timeout: 10s
#     #   retries: 3
#     #   start_period: 40s
#     # Don't expose port in production (only internal access)

#   # Frontend React App
#   frontend:
#     image: ghcr.io/${GITHUB_REPOSITORY:-your-username/video-surfing}-frontend:latest
#     container_name: video-surfing-frontend-prod
#     restart: unless-stopped
#     depends_on:
#       backend:
#         condition: service_healthy
#     networks:
#       - video-surfing-network
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost/health"]
#       interval: 30s
#       timeout: 10s
#       retries: 3
#       start_period: 40s
#     # Don't expose port in production (nginx will handle this)

#   # Nginx Reverse Proxy
#   # nginx:
#   #   image: nginx:alpine
#   #   container_name: video-surfing-nginx-prod
#   #   restart: unless-stopped
#   #   ports:
#   #     - "80:80"
#   #     - "443:443"
#   #   volumes:
#   #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
#   #     - ./nginx/ssl:/etc/nginx/ssl:ro
#   #     - ./logs/nginx:/var/log/nginx
#   #   depends_on:
#   #     - frontend
#   #     - backend
#   #   networks:
#   #     - video-surfing-network
#   #   healthcheck:
#   #     test: ["CMD", "curl", "-f", "http://localhost/health"]
#   #     interval: 30s
#   #     timeout: 10s
#   #     retries: 3

#   # Redis for caching (optional)
#   # redis:
#   #   image: redis:7-alpine
#   #   container_name: video-surfing-redis-prod
#   #   restart: unless-stopped
#   #   command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password_change_in_production}
#   #   volumes:
#   #     - redis_data:/data
#   #   networks:
#   #     - video-surfing-network
#   #   healthcheck:
#   #     test: ["CMD", "redis-cli", "ping"]
#   #     interval: 30s
#   #     timeout: 10s
#   #     retries: 3

# volumes:
#   mongodb_data:
#     driver: local
#   redis_data:
#     # driver: local

# networks:
#   video-surfing-network:
#     driver: bridge

version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: video-surfing-mongodb-prod
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: video-surfing
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - mynetwork
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 60s
      timeout: 10s
      retries: 2
      start_period: 40s

  backend:
    build:
      context: ./Backend
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGO_URI: mongodb://admin:password123@mongodb:27017/video-surfing?authSource=admin
      JWT_SECRET: your-secure-jwt-secret-key-change-in-production
      JWT_EXPIRES_IN: 90d
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./Backend:/app
    networks:
      - mynetwork

  frontend:
    build:
      context: ./Frontend
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
    env_file:
      - ./Frontend/.env    # Loads frontend .env
    networks:
      - mynetwork

volumes:
  mongodb_data:
    driver: local

networks:
  mynetwork:
